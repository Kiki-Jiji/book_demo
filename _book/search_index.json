[
["advanced-functions.html", "Chapter 7 Advanced Functions 7.1 Arguments for functions", " Chapter 7 Advanced Functions We will briefly examine using conditional logic in function arguments to allow your functions to have options. This can be useful for Create an optional viewing argument, which creates a graph of the data. This allows the data to be manually viewed, allowing outliers or distribution to be examined Allow different inputs, such as a function that includes a t-test, an a function argument could be used to alter the significance level used. For development. A function could have an argument that switches between join g all the data or dropping missing values, so whilst the data is still coming in the function could be used on the available data to see what the output might look like. 7.1 Arguments for functions To demonstrate we will use the function that we built in the last chapter. We can take the first function call, and add an argument. To start weâ€™ll create an argument that calls a plot. We call the argument plot (but it can be called anything) and set the default to FALSE. This will mean that if we call the argument without specifying plot the default will be not to generate a plot, we would need to call read_data(plot = TRUE) to get a plot. read_data &lt;- function(plot = FALSE, log_level = futile.logger::WARN, log_appender = &quot;console&quot;) { We will place the code at the end of the function before the closing brackets. This function uses an if statement to allow this element to be turned on and off. If the argument of the if statement is true (is plot is true), then the code chunk is run, if it is false then it is not run. So by using plot = TRUE this makes the if statement run the code chunk allowing the plotting function to be turned on when desired. The default is given as FALSE. This is useful for examining aspects of your data. In this example the data is grouped into 3 levels, at 4,6 and 8, the chart shows this. A graph would be a quick and effective method of checking whether data was not in one of these three groups, indicating an error in the data. You could use such this graphing function to examine whether your data is in the range you expect it. if(plot) { plot(b$cyl, b$mpg) } "]
]
